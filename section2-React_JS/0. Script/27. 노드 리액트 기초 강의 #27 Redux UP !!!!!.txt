27. 노드 리액트 기초 강의 #27 Redux UP !!!!!

REDUX를 적용시켜보자!
다운로드 받을 Dependency들
1. redux
2. react-redux
3. redux-promise
4. redux-thunk

[설치] client 터미널에서 아래의 구문 Enter
npm install redux react-redux redux-promise redux-thunk --save

redux-promise, redux-thunk 이 두개가 필요한 이유?? Redux를 잘 사용할 수 있게 도와주는 역할을 하는 미들웨어이다!

Promise형태로 받을 수도 있고, Functions 형식으로 오면 Redux Store에서는 받을 수 없음.
redux-thunk같은 경우에는 어떻게 Function을 받는지 방법 알려주고,
redux-promise는 디스패치한테 어떻게 Promise가 왔는지 대처를 하는지 알려주는 역할을 함.

Chrome Web Store에서 Redux DevTools 설치!
---
(client/src/index.js) 파일 수정
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import * as serviceWorker from './serviceWorker';
import 'antd/dist/antd.css';    // CSS
import { Provider } from 'react-redux'; // redux 사용 하기위해 Provider 라는 것을 사용한다!
import { applyMiddleware, createStore } from 'redux';
import promiseMiddleware from 'redux-promise';
import ReduxThunk from 'redux-thunk';
import Reducer from './_reducers';

const createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
    <Provider
        store={createStoreWithMiddleware(Reducer,
            window.__REDUX_DEVTOOLS_EXTENSION__&&
            window.__REDUX_DEVTOOLS_EXTENSION__()
        )}
    >
        <App />
    </Provider>
);
---
(client/src/_reducers/index.js) 파일 생성
import { combineReducers } from 'redux';
import user from './user_reducer';
import comment from './comment_reducer';

const rootReducer = combineReducers({
    user,
    comment
})

export default rootReducer
