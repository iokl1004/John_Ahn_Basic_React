30. 노드 리액트 기초 강의 #30 로그인 페이지 (2)
아래 추가
client/src/_actions/types.js
client/src/_actions/user_action.js

(client/src/_actions/types.js)
export const LOGIN_USER = "login_user";
---
(client/src/_actions/user_action.js)
import Axios from "axios";
import {
    LOGIN_USER
} from './types';

export function loginUser(dataTosubmit) {
    // 백엔드에서 가져온 데이터
    const request = Axios.post('/api/users/login', dataTosubmit)
    .then(response => response.data )

    return {
        type : LOGIN_USER,
        payload : request

    }
}
---
(client/src/_reducers/user_reducer.js)
import {
    LOGIN_USER
} from '../_actions/types';

export default function ( state ={} , action )  {
    switch (action.type) {
        case LOGIN_USER :
            return { ...state, loginSuccess : action.payload }
            break;
        default :
            return state;
    }
}
---
(client/src/components/views/LoginPage/LoginPage.js)
import React, { useState } from 'react'
import Axios from 'axios'
import { useDispatch } from 'react-redux';
import { loginUser } from '../../../_actions/user_action';

function LoginPage(props) {
  const dispatch = useDispatch();

  const [Email, setEmail] = useState("")
  const [Password, setPassword] = useState("")

  const onEmailHandler = (e) => {
    setEmail(e.currentTarget.value)
  }

  const onPasswordHandler = (e) => {
    setPassword(e.currentTarget.value)
  }

  const onSubmitHandler = (e) => {
    e.preventDefault(); // 리프레시를 방지한다!

    let body = {
      email : Email,
      password : Password
    }

    dispatch(loginUser(body))
        .then(response => {
          if(response.payload.loginSuccess) {
            props.history.push('/')
          } else {
            alert('Error')
          }
        })


  }

  return (
    <div style={{
        display: 'flex', justifyContent : 'center', alignItems : 'center'
        , width : '100%', height : '100vh'
    }}>
        <form style= {{ display : 'flex', flexDirection : 'column' }}
              onSubmit={onSubmitHandler}
        >
          <label>Email</label>
          <input type="email" value={Email} onChange={onEmailHandler} />
          <label>Password</label>
          <input type="Password" value={Password} onChange={onPasswordHandler} />
          <br />
          <button type="submit">
            Login
          </button>
        </form>
    </div>
  )
}

export default LoginPage
